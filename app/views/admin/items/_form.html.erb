<%= f.hidden_field :user_id, :value => current_user.id if current_user %>

<div style="padding-bottom: 20px;float: left;">
  <% if @item.errors.any? %>
    <div id="errorExplanation" class="erro_messages">
      <h2><%= t(:include_following) %></h2>
      <ul>
        <li style="list-style: square;float: left;">
          <%= t(:required_fields) %> <%= @item.errors.full_messages.to_sentence  %>
        </li>
      </ul>
    </div>
  <% end %>
</div>

<div style="float: left; width: 60%;margin-top: 20px;">
  <div class="xfields"> <%= t(:title) %>
    <%= f.text_field :title, :style => "width:315px;" %><br/>
  </div>
</div>
<br/>
<br/>
<%= f.fields_for :avatars do |avatar| %>
  <% if avatar.object.new_record? %>
    <p>
      <%= t(:image_space) %><%= avatar.file_field :photo %><br/>
    </p>
  <%end%>
<%end%>


<div style="width: 100%;padding: 10px;">
  <%= f.fields_for :avatars do |avatar| %>
    <% unless avatar.object.new_record? %>
      <%= link_to( image_tag(avatar.object.photo.url(:thumb)), avatar.object.photo.url(:original) ) %>
      <%= avatar.check_box :_destroy %>
      &nbsp;&nbsp;&nbsp;
    <% end %>
  <% end %>
</div>

<br/>
<br/>
<div id="where-iteme">
  <div class="field-address"><%= t(:location) %><br/>
    <%= f.text_field :address, :class => "field-l", :style => "width:700px;" %>
    <div id="item_advanced_container" style="display:none;">
      <div id="item_advanced" style="display:none;">
        <%= f.label(:longitude, "Coordinates") %>
        <%= f.text_field :longitude, :class => 'required two-side-by-side' %>
        <%= f.text_field :latitude , :class => 'required two-side-by-side second'%><br />
      </div>
      <div class="small">
        <a href="javascript:void(0);" id="item_advanced_link"><%= "Advance Settings" %></a>
      </div>
    </div>
  </div>
</div>
<div class="xfields"><%= t(:neighbourhood) %>
  <%= f.text_field :neighbourhood, :style => "width:315px;" %><br/>
</div>

<br/>
<div style="width: 40%;">
  <% if @map %>
    <%= raw(@map.div(:width => 500, :height => 400)) %>
  <% end %>
</div>
<br/>

<div class="xfields" style="width: 100%;"><%= t(:space_size) %>
  <%= f.text_field :size, :style => "width:80px;", :onchange => "update_units()" %>
  <%= select_tag "item[size_unit]", options_for_select([["SQMT","SQMT"],["SQFT","SQFT"]], @item.size_unit),:onchange => "update_units()" %>
  <div id="other_unit">
    <%= t(:sqft) %>
  </div>
</div>


<br/>
<div class="xfields"><%= t(:space_type) %>
  <%= select_tag( "item[listing_type_id]", options_from_collection_for_select(@listing_types,:id, :name, @item.listing_type_id)) %><br />
</div>
<br/>

<div class="xfields"><%= t(:space_description) %><br/>
  <%= f.text_area :description, :size => "50x7" %>
</div>

<br/>


<div class="xfields">
  <span>
    <%= t(:space_price) %>
  </span>
  <span>
    <%= f.text_field :price %> &nbsp;&nbsp;
    <%= select_tag "item[price_unit]", options_for_select([["USD","USD"],["EUR","EUR"]], @item.price_unit) %>&nbsp;&nbsp;
    <%= select_tag "item[time_for_unit_price]", options_for_select([["Per Day","Per Day"],["Per Week","Per Week"], ["Per Two Weeks","Per Two weeks"], ["Per Month","Per Month"]], @item.time_for_unit_price) %>&nbsp;&nbsp;PUS takes 10% of every transaction.  </span>
</div>
<br/>
<br/>

<div>
  <%= t(:gathering) %>&nbsp;&nbsp;&nbsp;
  <%= select_tag "item[is_shareable]", options_for_select([["Yes","Yes"],["No","No"]], @item.is_shareable) %>&nbsp;&nbsp;
  <%= t(:up_to) %>&nbsp;&nbsp;&nbsp;
  <%= f.text_field :maximum_members, :size => "5" %> <%= t(:persons) %>
</div>
<br/>
<br/>


<div class="xfields">  
  <%= t(:availability) %><br/><br/>
  <%= f.datetime_select :availability_from, :order => [:year, :month, :day]   %> &nbsp;&nbsp;-&nbsp;&nbsp;
  <br/><br/>
  <%= t(:availability_to) %>
  <br/><br/>
  <%= f.datetime_select :availability_to, :order => [:year, :month, :day]   %><br/><br/>

  <% @availability_options.each do |availability_option| %>
    <%= check_box_tag("availability_options[]", availability_option.id, @item.availability_options.include?(availability_option)) %>
    <%= availability_option.name %>
  <% end %>

</div>

<br/>
<br/>

<div id="iteme-type" style="width: 100%;float: left;">
  <div id="left-tellus">
    <div id="save-addmore">
      <%= f.submit @item.new_record? ? "Create Listing" : "Update Space" %>
    </div>
  </div>
</div>
<br/><br/>

<script>
  var marker = null;
  var get_location_name_timeout = null;

  $(document).ready(function() {


  $('#map').css("margin", "0 auto");


  var update_location_fun = function(resolveName) {
  if(resolveName == null) {
  resolveName = true;
  }

  var form = $('#new_item');
  var latlng = new GLatLng(
  $('#item_latitude').val(),
  $('#item_longitude').val()
  );

  map.setCenter(latlng);
  if(marker) {
  map.removeOverlay(marker);
  }

  marker = new GMarker(latlng);
  map.setZoom(15);
  map.addOverlay(marker);



  if(resolveName) {


  var get_location_name_fun = function() {
  $.ajax({
  url: "/xml/address_search.xml?lat=" + latlng.lat() + "&lon=" + latlng.lng(),
  dataType: 'xml',
  success: function(resp) {

  $('#item_address').removeClass('ui-autocomplete-loading');
  var name = $('address', resp).text();
  if(name != '') {
  $('#item_address').val($('address', resp).text());
  }
  }
  });
  }

  if(get_location_name_timeout) {
  clearTimeout(get_location_name_timeout);
  }
  get_location_name_timeout = setTimeout(get_location_name_fun, 300);
  $('#item_address').addClass('ui-autocomplete-loading');
  }
  }

  var register_map_event_fun = function() {
  if(!map) {
  setTimeout(register_map_event_fun, 100);
  return;
  }
  GEvent.addListener(map, "click", function(overlay, latlng) {
  if (latlng) {
  $('#item_longitude').val(latlng.lng());
  $('#item_latitude').val(latlng.lat());
  update_location_fun();
  }
  });
  }
  setTimeout(register_map_event_fun, 100);

  $('#item_address').autocomplete({
  focus: function(event, ui) {
  return false;
  },
  select: function(event, ui) {
  var position = ui.item.id.split(";");
  $('#item_longitude').val(position[0]);
  $('#item_latitude').val(position[1]);
  update_location_fun(false);
  },
  source: function(request, cb) {
  $.ajax({
  url: "/xml/location_search.xml?q=" + request.term,
  dataType: 'xml',
  success: function(resp) {
  cb($("location", resp).map(function() {
  return {label: $("address", this).text(), id: $("longitude", this).text() + ";" + $("latitude", this).text()
  };
  }).get());
  }
  });
  },
  minLength: 2,
  change: function (event, ui) {
  if (ui.item) {
  $('#another_element').val(ui.item.source.label);
  }
  else {
  if (!$(this).data('valid')) {
  $(this).val('');
  $('#another_element').val('');
  }
  }
  $(this).data('valid', false);
  }
  }).live('blur', function (e) {
  if ($('.ui-autocomplete li:visible').length > 0) {
  $(".ui-autocomplete li:visible:first").click();
  item = $($(".ui-autocomplete li:visible:first").data()).attr('item.autocomplete');
  var position = item.id.split(";");
  $('#item_longitude').val(position[0]);
  $('#item_latitude').val(position[1]);
  update_location_fun(false);
  $(this).val(item.label);
  $('#another_element').val(item.label);
  $(this).data('valid', true);

  }
  });
  //$('#new_location').validate();
  });

  function update_units(){
    val = $("#item_size_unit").val();
    if(val== "SQMT"){
      if($("#item_size").val()){
        fts = $("#item_size").val() * 10.764;
      }
      else{
        fts = 0;
      }
      $("#other_unit").text(fts+" SQFT");
    }
    else{
      if($("#item_size").val()){
        mts = $("#item_size").val() / 10.764;
      }
      else{
        mts = 0;
      }
      $("#other_unit").text(mts+" SQMT");
    }
  }


</script>
